torch.float32
Train Epoch: 0 	Graphs_seen: 0.0% 	Loss: 6.893957
torch.float32
Test set: Average loss: 0.6664, Accuracy: 188.5/37675.0 (1%)
torch.float32
Train Epoch: 1 	Graphs_seen: 0.0% 	Loss: 8.419093
torch.float32
Test set: Average loss: 0.5964, Accuracy: 168.0/37675.0 (0%)
torch.float32
Train Epoch: 2 	Graphs_seen: 0.0% 	Loss: 9.266074
torch.float32
Test set: Average loss: 0.5798, Accuracy: 191.0/37675.0 (1%)
torch.float32
Train Epoch: 3 	Graphs_seen: 0.0% 	Loss: 7.027459
torch.float32
Test set: Average loss: 0.6125, Accuracy: 190.5/37675.0 (1%)
torch.float32
Train Epoch: 4 	Graphs_seen: 0.0% 	Loss: 7.420875
torch.float32
Test set: Average loss: 0.5230, Accuracy: 188.5/37675.0 (1%)
torch.float32
Train Epoch: 5 	Graphs_seen: 0.0% 	Loss: 7.763448
torch.float32
Test set: Average loss: 0.5574, Accuracy: 194.0/37675.0 (1%)
torch.float32
Train Epoch: 6 	Graphs_seen: 0.0% 	Loss: 8.455038
torch.float32
Test set: Average loss: 0.5685, Accuracy: 193.0/37675.0 (1%)
torch.float32
Train Epoch: 7 	Graphs_seen: 0.0% 	Loss: 6.827255
torch.float32
Test set: Average loss: 0.5121, Accuracy: 184.5/37675.0 (0%)
torch.float32
Train Epoch: 8 	Graphs_seen: 0.0% 	Loss: 8.416310
torch.float32
Test set: Average loss: 0.5619, Accuracy: 175.5/37675.0 (0%)
torch.float32
Train Epoch: 9 	Graphs_seen: 0.0% 	Loss: 7.461299
torch.float32
Test set: Average loss: 0.5546, Accuracy: 185.0/37675.0 (0%)
torch.float32
Train Epoch: 10 	Graphs_seen: 0.0% 	Loss: 7.756579
torch.float32
Test set: Average loss: 0.5546, Accuracy: 169.0/37675.0 (0%)
torch.float32
Train Epoch: 11 	Graphs_seen: 0.0% 	Loss: 6.782034
torch.float32
Test set: Average loss: 0.5333, Accuracy: 183.5/37675.0 (0%)
torch.float32
Train Epoch: 12 	Graphs_seen: 0.0% 	Loss: 7.205386
torch.float32
Test set: Average loss: 0.5995, Accuracy: 188.0/37675.0 (0%)
torch.float32
Train Epoch: 13 	Graphs_seen: 0.0% 	Loss: 7.919788
torch.float32
Test set: Average loss: 0.4706, Accuracy: 189.0/37675.0 (1%)
torch.float32
Train Epoch: 14 	Graphs_seen: 0.0% 	Loss: 7.866679
torch.float32
Test set: Average loss: 0.5395, Accuracy: 186.5/37675.0 (0%)
torch.float32
Train Epoch: 15 	Graphs_seen: 0.0% 	Loss: 8.388232
torch.float32
Test set: Average loss: 0.5776, Accuracy: 178.5/37675.0 (0%)
torch.float32
Train Epoch: 16 	Graphs_seen: 0.0% 	Loss: 7.627531
torch.float32
Test set: Average loss: 0.5553, Accuracy: 189.5/37675.0 (1%)
torch.float32
Train Epoch: 17 	Graphs_seen: 0.0% 	Loss: 8.063363
torch.float32
Test set: Average loss: 0.6256, Accuracy: 193.0/37675.0 (1%)
torch.float32
Train Epoch: 18 	Graphs_seen: 0.0% 	Loss: 7.019300
torch.float32
Test set: Average loss: 0.6883, Accuracy: 184.5/37675.0 (0%)
torch.float32
Train Epoch: 19 	Graphs_seen: 0.0% 	Loss: 8.624256
torch.float32
Test set: Average loss: 0.5199, Accuracy: 176.5/37675.0 (0%)
torch.float32
Train Epoch: 20 	Graphs_seen: 0.0% 	Loss: 7.342061
torch.float32
Test set: Average loss: 0.5341, Accuracy: 191.0/37675.0 (1%)
torch.float32
Train Epoch: 21 	Graphs_seen: 0.0% 	Loss: 7.405747
torch.float32
Test set: Average loss: 0.5115, Accuracy: 183.0/37675.0 (0%)
torch.float32
Train Epoch: 22 	Graphs_seen: 0.0% 	Loss: 7.844536
torch.float32
Test set: Average loss: 0.6180, Accuracy: 174.5/37675.0 (0%)
torch.float32
Train Epoch: 23 	Graphs_seen: 0.0% 	Loss: 8.133804
torch.float32
Test set: Average loss: 0.5266, Accuracy: 180.0/37675.0 (0%)
torch.float32
Train Epoch: 24 	Graphs_seen: 0.0% 	Loss: 8.319184
torch.float32
Test set: Average loss: 0.5730, Accuracy: 198.0/37675.0 (1%)
torch.float32
Train Epoch: 25 	Graphs_seen: 0.0% 	Loss: 8.491926
torch.float32
Test set: Average loss: 0.4797, Accuracy: 171.0/37675.0 (0%)
torch.float32
Train Epoch: 26 	Graphs_seen: 0.0% 	Loss: 7.511345
torch.float32
Test set: Average loss: 0.5383, Accuracy: 175.0/37675.0 (0%)
torch.float32
Train Epoch: 27 	Graphs_seen: 0.0% 	Loss: 8.380319
torch.float32
Test set: Average loss: 0.5503, Accuracy: 180.0/37675.0 (0%)
torch.float32
Train Epoch: 28 	Graphs_seen: 0.0% 	Loss: 9.299131
torch.float32
Test set: Average loss: 0.4934, Accuracy: 191.0/37675.0 (1%)
torch.float32
Train Epoch: 29 	Graphs_seen: 0.0% 	Loss: 9.007385
torch.float32
Test set: Average loss: 0.4620, Accuracy: 180.0/37675.0 (0%)
torch.float32
Train Epoch: 30 	Graphs_seen: 0.0% 	Loss: 8.765197
torch.float32
Test set: Average loss: 0.5599, Accuracy: 198.5/37675.0 (1%)
torch.float32
Train Epoch: 31 	Graphs_seen: 0.0% 	Loss: 8.056718
torch.float32
Test set: Average loss: 0.5032, Accuracy: 189.5/37675.0 (1%)
torch.float32
Train Epoch: 32 	Graphs_seen: 0.0% 	Loss: 7.392159
torch.float32
Test set: Average loss: 0.6162, Accuracy: 179.0/37675.0 (0%)
torch.float32
Train Epoch: 33 	Graphs_seen: 0.0% 	Loss: 7.607132
torch.float32
Test set: Average loss: 0.5796, Accuracy: 189.5/37675.0 (1%)
torch.float32
Train Epoch: 34 	Graphs_seen: 0.0% 	Loss: 7.308043
torch.float32
Test set: Average loss: 0.5258, Accuracy: 171.0/37675.0 (0%)
torch.float32
Train Epoch: 35 	Graphs_seen: 0.0% 	Loss: 7.989614
torch.float32
Test set: Average loss: 0.5975, Accuracy: 192.5/37675.0 (1%)
torch.float32
Train Epoch: 36 	Graphs_seen: 0.0% 	Loss: 7.614178
torch.float32
Test set: Average loss: 0.5646, Accuracy: 182.5/37675.0 (0%)
torch.float32
Train Epoch: 37 	Graphs_seen: 0.0% 	Loss: 7.864264
torch.float32
Test set: Average loss: 0.6262, Accuracy: 196.0/37675.0 (1%)
torch.float32
Train Epoch: 38 	Graphs_seen: 0.0% 	Loss: 8.523731
torch.float32
Test set: Average loss: 0.5292, Accuracy: 192.0/37675.0 (1%)
torch.float32
Train Epoch: 39 	Graphs_seen: 0.0% 	Loss: 8.452919
torch.float32
Test set: Average loss: 0.5820, Accuracy: 180.5/37675.0 (0%)
torch.float32
Train Epoch: 40 	Graphs_seen: 0.0% 	Loss: 8.110154
torch.float32
Test set: Average loss: 0.4997, Accuracy: 182.5/37675.0 (0%)
torch.float32
Train Epoch: 41 	Graphs_seen: 0.0% 	Loss: 8.221542
torch.float32
Test set: Average loss: 0.5542, Accuracy: 182.5/37675.0 (0%)
torch.float32
Train Epoch: 42 	Graphs_seen: 0.0% 	Loss: 8.105286
torch.float32
Test set: Average loss: 0.4962, Accuracy: 189.5/37675.0 (1%)
torch.float32
Train Epoch: 43 	Graphs_seen: 0.0% 	Loss: 8.593900
torch.float32
Test set: Average loss: 0.6258, Accuracy: 182.5/37675.0 (0%)
torch.float32
Train Epoch: 44 	Graphs_seen: 0.0% 	Loss: 7.372691
torch.float32
Test set: Average loss: 0.5564, Accuracy: 185.0/37675.0 (0%)
torch.float32
Train Epoch: 45 	Graphs_seen: 0.0% 	Loss: 7.724175
torch.float32
Test set: Average loss: 0.5793, Accuracy: 187.0/37675.0 (0%)
torch.float32
Train Epoch: 46 	Graphs_seen: 0.0% 	Loss: 6.880726
torch.float32
Test set: Average loss: 0.5563, Accuracy: 184.0/37675.0 (0%)
torch.float32
Train Epoch: 47 	Graphs_seen: 0.0% 	Loss: 8.748335
torch.float32
Test set: Average loss: 0.6672, Accuracy: 187.0/37675.0 (0%)
torch.float32
Train Epoch: 48 	Graphs_seen: 0.0% 	Loss: 7.957787
torch.float32
Traceback (most recent call last):
  File "/home/nbiescas/Desktop/CVC/CVC_internship/main.py", line 29, in <module>
    model_pipeline(model, train_loader, val_loader, test_loader)
  File "/home/nbiescas/Desktop/CVC/CVC_internship/training.py", line 92, in model_pipeline
    train_loss = train(epoch, criterion, model, optimizer, train_loader)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nbiescas/Desktop/CVC/CVC_internship/training.py", line 68, in train
    output = model(graph, features)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nbiescas/miniconda3/envs/CVC/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nbiescas/Desktop/CVC/CVC_internship/VGAE.py", line 53, in forward
    z = self.encoder(g, features)
        ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nbiescas/Desktop/CVC/CVC_internship/VGAE.py", line 42, in encoder
    self.mean = self.layers[-2](g, h)
                ^^^^^^^^^^^^^^^^^^^^^
  File "/home/nbiescas/miniconda3/envs/CVC/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nbiescas/miniconda3/envs/CVC/lib/python3.11/site-packages/dgl/nn/pytorch/conv/graphconv.py", line 428, in forward
    degs = graph.out_degrees().to(feat_src).clamp(min=1)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/nbiescas/miniconda3/envs/CVC/lib/python3.11/site-packages/dgl/heterograph.py", line 3745, in out_degrees
    u = self.srcnodes(srctype)
        ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nbiescas/miniconda3/envs/CVC/lib/python3.11/site-packages/dgl/view.py", line 53, in __call__
    ctx=self._graph.device,
        ^^^^^^^^^^^^^^^^^^
  File "/home/nbiescas/miniconda3/envs/CVC/lib/python3.11/site-packages/dgl/heterograph.py", line 5654, in device
    return F.to_backend_ctx(self._graph.ctx)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nbiescas/miniconda3/envs/CVC/lib/python3.11/site-packages/dgl/backend/pytorch/tensor.py", line 119, in to_backend_ctx
    return th.device("cuda", dglctx.device_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Test set: Average loss: 0.5622, Accuracy: 185.0/37675.0 (0%)
torch.float32
torch.float32